
<div id="home" class="orbit" data-orbit data-options="animInFromLeft:fade-in; animInFromRight:fade-in; animOutToLeft:fade-out; animOutToRight:fade-out; timerDelay:5000">
  <div class="black-wrapper">
    <ul class="row orbit-container">
      <button class="orbit-previous">&#9664;</button>
      <button class="orbit-next">&#9654;</button>
      <li class="orbit-slide">
        <div>
          <img src="images/code1.jpg">
          <figcaption class="orbit-caption">
            <p class="caption-header">Code</p>
            <p class="caption-footer">Find an engineer with a passion for coding.</p>
          </figcaption>
        </div>
      </li>
      <li class="orbit-slide">
        <div>
          <img src="images/analysis1.jpg">
          <figcaption class="orbit-caption">
            <p class="caption-header">Analyze</p>
            <p class="caption-footer">Anyone can amass data. The real question is how to analyze it.</p>
          </figcaption>
        </div>
      </li>
      <li class="orbit-slide">
        <div>
          <img src="images/design1.jpg">
          <figcaption class="orbit-caption">
            <p class="caption-header">Design</p>
            <p class="caption-footer">Successful products are more than bug-free code. Having intuitive and elegant design is key to attracting users.</p>
          </figcaption>
        </div>
      </li>
      <li class="orbit-slide">
        <div>
          <img src="images/solution1.jpg">
          <figcaption class="orbit-caption">
            <p class="caption-header">Solve</p>
            <p class="caption-footer">Use data-driven insights to engineer today's complex problems.</p>
          </figcaption>
        </div>
      </li>
    </ul>
  </div>
  <nav class="row orbit-bullets">
    <button class="is-active" data-slide="0"></button>
    <button data-slide="1"></button>
    <button data-slide="2"></button>
    <button data-slide="3"></button>
  </nav>
</div>

<div id="about" class="row">
  <div class="small-8 columns">
    <div class="text-header">
      <p>Hi, I'm Joseph.</p>
    </div>
    <div class="text-footer">
      <p>I program things using Ruby on Rails and write SQL queries for analysis.</p>
      <p>The first language I picked up was SQL during a technical consulting position. While there, I also learned my first scripting language AutoHotkey to automate all tasks that required systematic clicking and keystrokes. From there, my interest in programming grew as I independently learned HTML, CSS, and Javascript. Currently my favorite language is Ruby. Relative to other languages it boasts a clean and intuitive syntax that is easy for others to read, as well as many powerful methods that can be readily applied.</p>
      <p>While many view programming simply as a skill, it also begins to feel like an art. A particular problem can have multiple viable solutions, but the resulting solution depends on the programmer behind the code. It's a constant balancing act between maintaining readable code, fewest number of lines, and efficency by using minimal processing power. One of the most satisfying feelings is when all three are achieved to produce elegant code.</p>
      <p>What I love about programming the most is its ability to immerse me completely. One of my favorite moments as a child would be to sit down for hours with a brand new book. There was something about the texture of the pages, the creak of a sheet being turned for the first time, and the distinct fragrance of freshly printed paper. I could read for hours completely immersed in my imagination. Code brings about the same feeling (sometimes). When I dive deep into a problem I create a solution, seek to understand solutions done by peers, and improve on my solution again. There's nothing quite like creatively coming up with a simple solution to a complex problem.</p>
      <p>On my spare time, I enjoy playing <a href="http://www.chess.com/members/view/jscho13">chess</a>, listening to music, <a href="https://www.youtube.com/watch?v=MpBVlkW347w">dancing</a>, and hanging out with good company.</p>
    </div>
  </div>
  <div class="small-4 columns">
    <img src="images/profile1.jpg">
  </div>
</div>

<div class="gray-wrapper">
  <div class="row">
    <img src="images/chess1.jpg">
  </div>
</div>

<div id="projects" class="row columns">
  <div class="text-header image-spacer">
    <p>Projects</p>
  </div>
  <ul class="tabs" data-tabs id="project-tabs">
    <li class="tabs-title is-active"><a href="#this-website">This Website</a></li>
    <li class="tabs-title"><a href="#online-trading-webcrawler">Online Trading Webcrawler</a></li>
    <li class="tabs-title"><a href="#breakable-toy">Breakable Toy</a></li>
  </ul>
  <div class="tabs-content columns" data-tabs-content="project-tabs">
    <div class="tabs-panel is-active" id="this-website">
      <table class="hover">
        <thead>
          <tr>
            <th width="20%">Technologies Used</th>
            <th width="80%">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Sinatra</td>
            <td>Sinatra is an open source library and domain-specific language written in Ruby. It's an alternative to other Ruby frameworks such as Rails, and does not follow the typical model–view–controller architecture used in other framkeworks. Instead, Sinatra's main benefit lies in it's ability to create light-weight web applications with speed and simplicity. Some notable companies and institutions that use Sinatra include Apple, BBC, LinkedIn, Engine Yard, Heroku, and Songbird.</td>
          </tr>
          <tr>
            <td>Foundation</td>
            <td>Foundation is a responsive front-end framework that utilizes a responsive grid, HTML and CSS components. It includes code snippets for typography, forms, buttons, navigation and other common interface components. It also includes optional JavaScript extensions for a more responsive application. Foundation is maintained by ZURB and is an open source project.</td>
          </tr>
          <tr>
            <td>Ruby</td>
            <td>Ruby is a dynamic, object-orientated, general-purpose, programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. <a href="http://ruby-doc.com/docs/ProgrammingRuby/">The Pragmatic Programmer's Guide</a> by Dave Thomas and Andy Matz describe Ruby like this: "Take a true object-oriented language, such as Smalltalk. Drop the unfamiliar syntax and move to more conventional, file-based source code. Now add in a good measure of the flexibility and convenience of languages such as Python and Perl. You end up with Ruby."</td>
          </tr>
          <tr>
            <td>HTML, CSS, JavaScript</td>
            <td>HTML (HyperText Markup Language), CSS (Cascading Style Sheets), and JavaScript are cornerstone technologies used by websites. HTML determines the foundational structure and content of web pages. Web browsers then refer to CSS to define the look and layout of the text and other material. Finally, JavaScript enables a majority of the interaction between the user and the webpage. Without JavaScript, a majority of responsive effects would be unavailable. In terms of a human analogy, HTML is the skeleton, CSS is the skin, and JavaScript is the muscles of a web application.</td>
          </tr>
        </tbody>
      </table>
      <p>Vivamus hendrerit arcu sed erat molestie vehicula. Sed auctor neque eu tellus rhoncus ut eleifend nibh porttitor. Ut in nulla enim. Phasellus molestie magna non est bibendum non venenatis nisl tempor. Suspendisse dictum feugiat nisl ut dapibus.</p>
    </div>

    <div class="tabs-panel" id="online-trading-webcrawler">
      <table class="hover">
        <thead>
          <tr>
            <th width="20%">Technologies Used</th>
            <th width="80%">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Ruby</td>
            <td>Ruby is a dynamic, object-orientated, general-purpose, programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. <a href="http://ruby-doc.com/docs/ProgrammingRuby/">The Pragmatic Programmer's Guide</a> by Dave Thomas and Andy Matz describe Ruby like this: "Take a true object-oriented language, such as Smalltalk. Drop the unfamiliar syntax and move to more conventional, file-based source code. Now add in a good measure of the flexibility and convenience of languages such as Python and Perl. You end up with Ruby."</td>
          </tr>
          <tr>
            <td>Nokogiri</td>
            <td>Nokogiri (鋸) is an HTML, XML, SAX, and Reader parser. It parses and searches XML/HTML very quickly, and also has correctly implemented CSS3 selector support as well as XPath 1.0 support.</td>
          </tr>
          <tr>
            <td>XPath</td>
            <td>XPath, the XML Path Language, is a query language for selecting nodes from an XML document. In addition, XPath may be used to compute values (e.g., strings, numbers, or Boolean values) from the content of an XML document..</td>
          </tr>
        </tbody>
      </table>
      <p>Vivamus hendrerit arcu sed erat molestie vehicula. Sed auctor neque eu tellus rhoncus ut eleifend nibh porttitor. Ut in nulla enim. Phasellus molestie magna non est bibendum non venenatis nisl tempor. Suspendisse dictum feugiat nisl ut dapibus.</p>
    </div>

    <div class="tabs-panel" id="breakable-toy">
      <table class="hover">
        <thead>
          <tr>
            <th width="20%">Technologies Used</th>
            <th width="80%">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Rails</td>
            <td>Ruby on Rails, or simply Rails, is a web application framework written in Ruby under MIT License. Rails is a model–view–controller (MVC) framework, providing default structures for a database, a web service, and web pages. It encourages and facilitates the use of web standards such as JSON or XML for data transfer, and HTML, CSS and JavaScript for display and user interfacing. In addition to MVC, Rails emphasizes the use of other well-known software engineering patterns and paradigms, including convention over configuration (CoC), don't repeat yourself (DRY), and the active record pattern.</td>
          </tr>
          <tr>
            <td>Foundation</td>
            <td>Foundation is a responsive front-end framework that utilizes a responsive grid, HTML and CSS components. It includes code snippets for typography, forms, buttons, navigation and other common interface components. It also includes optional JavaScript extensions for a more responsive application. Foundation is maintained by ZURB and is an open source project.</td>
          </tr>
          <tr>
            <td>Ruby</td>
            <td>Ruby is a dynamic, object-orientated, general-purpose, programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. <a href="http://ruby-doc.com/docs/ProgrammingRuby/">The Pragmatic Programmer's Guide</a> by Dave Thomas and Andy Matz describe Ruby like this: "Take a true object-oriented language, such as Smalltalk. Drop the unfamiliar syntax and move to more conventional, file-based source code. Now add in a good measure of the flexibility and convenience of languages such as Python and Perl. You end up with Ruby."</td>
          </tr>
          <tr>
            <td>HTML, CSS, JavaScript</td>
            <td>HTML (HyperText Markup Language), CSS (Cascading Style Sheets), and JavaScript are cornerstone technologies used by websites. HTML determines the foundational structure and content of web pages. Web browsers then refer to CSS to define the look and layout of the text and other material. Finally, JavaScript enables a majority of the interaction between the user and the webpage. Without JavaScript, a majority of responsive effects would be unavailable. In terms of a human analogy, HTML is the skeleton, CSS is the skin, and JavaScript is the muscles of a web application.</td>
          </tr>
        </tbody>
      </table>
      <p>Vivamus hendrerit arcu sed erat molestie vehicula. Sed auctor neque eu tellus rhoncus ut eleifend nibh porttitor. Ut in nulla enim. Phasellus molestie magna non est bibendum non venenatis nisl tempor. Suspendisse dictum feugiat nisl ut dapibus.</p>
    </div>
  </div>
</div>

<div id="experience" class="row columns">
  <div class="text-header image-spacer">
    <p>Experience</p>
  </div>
  <ul class="tabs" data-tabs id="experience-tabs">
    <li class="tabs-title is-active"><a href="#db-sql-query">SQL Database Anaylst</a></li>
    <li class="tabs-title"><a href="#clinical-research">Clinical Research Assistant</a></li>
  </ul>
    <div class="tabs-panel is-active" id="db-sql-query">
      <table class="hover">
        <thead>
          <tr>
            <th width="20%">Technologies Used</th>
            <th width="80%">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>SQL</td>
            <td>SQL is a special-purpose programming language designed for managing data held in a relational database management system (RDBMS). Originally based upon relational algebra and tuple relational calculus, SQL consists of a data definition, manipulation, control language. The scope of SQL includes data insert, query, update, delete, schema creation and modification, and data access control. Although SQL is often described as, and to a great extent is, a declarative language, it also includes procedural elements.</td>
          </tr>
        </tbody>
      </table>
      <p>Vivamus hendrerit arcu sed erat molestie vehicula. Sed auctor neque eu tellus rhoncus ut eleifend nibh porttitor. Ut in nulla enim. Phasellus molestie magna non est bibendum non venenatis nisl tempor. Suspendisse dictum feugiat nisl ut dapibus.</p>
    </div>

    <div class="tabs-panel" id="clinical-research">
      <table class="hover">
        <thead>
          <tr>
            <th width="20%">Technologies Used</th>
            <th width="80%">Description</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>Rails</td>
            <td>Ruby on Rails, or simply Rails, is a web application framework written in Ruby under MIT License. Rails is a model–view–controller (MVC) framework, providing default structures for a database, a web service, and web pages. It encourages and facilitates the use of web standards such as JSON or XML for data transfer, and HTML, CSS and JavaScript for display and user interfacing. In addition to MVC, Rails emphasizes the use of other well-known software engineering patterns and paradigms, including convention over configuration (CoC), don't repeat yourself (DRY), and the active record pattern.</td>
          </tr>
          <tr>
            <td>Foundation</td>
            <td>Foundation is a responsive front-end framework that utilizes a responsive grid, HTML and CSS components. It includes code snippets for typography, forms, buttons, navigation and other common interface components. It also includes optional JavaScript extensions for a more responsive application. Foundation is maintained by ZURB and is an open source project.</td>
          </tr>
          <tr>
            <td>Ruby</td>
            <td>Ruby is a dynamic, object-orientated, general-purpose, programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write. <a href="http://ruby-doc.com/docs/ProgrammingRuby/">The Pragmatic Programmer's Guide</a> by Dave Thomas and Andy Matz describe Ruby like this: "Take a true object-oriented language, such as Smalltalk. Drop the unfamiliar syntax and move to more conventional, file-based source code. Now add in a good measure of the flexibility and convenience of languages such as Python and Perl. You end up with Ruby."</td>
          </tr>
          <tr>
            <td>HTML, CSS, JavaScript</td>
            <td>HTML (HyperText Markup Language), CSS (Cascading Style Sheets), and JavaScript are cornerstone technologies used by websites. HTML determines the foundational structure and content of web pages. Web browsers then refer to CSS to define the look and layout of the text and other material. Finally, JavaScript enables a majority of the interaction between the user and the webpage. Without JavaScript, a majority of responsive effects would be unavailable. In terms of a human analogy, HTML is the skeleton, CSS is the skin, and JavaScript is the muscles of a web application.</td>
          </tr>
        </tbody>
      </table>
      <p>Vivamus hendrerit arcu sed erat molestie vehicula. Sed auctor neque eu tellus rhoncus ut eleifend nibh porttitor. Ut in nulla enim. Phasellus molestie magna non est bibendum non venenatis nisl tempor. Suspendisse dictum feugiat nisl ut dapibus.</p>
    </div>
  </div>
</div>
